<?php

namespace DoctrineORMModule\Proxy\__CG__\Application\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \Application\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'userId', 'username', 'email', 'emailPrivate', 'password', 'firstName', 'lastName', 'employeeNo', 'displayName', 'address', 'zip', 'city', 'phoneNumberMobile', 'phoneNumberOther', 'dateAdd', 'securityKey', 'dateUpdate', 'dateLastLogin', 'roles', 'competenceAreas', 'languageId', 'superiorId', 'organizationId', 'state', 'accessibleApplications', 'lastActivity', 'datePasswordUpdated', 'organizationRestrictionEnabled'];
        }

        return ['__isInitialized__', 'userId', 'username', 'email', 'emailPrivate', 'password', 'firstName', 'lastName', 'employeeNo', 'displayName', 'address', 'zip', 'city', 'phoneNumberMobile', 'phoneNumberOther', 'dateAdd', 'securityKey', 'dateUpdate', 'dateLastLogin', 'roles', 'competenceAreas', 'languageId', 'superiorId', 'organizationId', 'state', 'accessibleApplications', 'lastActivity', 'datePasswordUpdated', 'organizationRestrictionEnabled'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getUserId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserId', []);

        return parent::getUserId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserId', [$id]);

        return parent::setUserId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', [$username]);

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailPrivate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailPrivate', []);

        return parent::getEmailPrivate();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailPrivate($emailPrivate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailPrivate', [$emailPrivate]);

        return parent::setEmailPrivate($emailPrivate);
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstName($firstName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstName', [$firstName]);

        return parent::setFirstName($firstName);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstName', []);

        return parent::getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastName($lastName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastName', [$lastName]);

        return parent::setLastName($lastName);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastName', []);

        return parent::getLastName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDisplayName($displayName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDisplayName', [$displayName]);

        return parent::setDisplayName($displayName);
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplayName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplayName', []);

        return parent::getDisplayName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateAdd($dateAdd)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateAdd', [$dateAdd]);

        return parent::setDateAdd($dateAdd);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateAdd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateAdd', []);

        return parent::getDateAdd();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateUpdate($dateUpdate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateUpdate', [$dateUpdate]);

        return parent::setDateUpdate($dateUpdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateUpdate', []);

        return parent::getDateUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateLastLogin($dateLastLogin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateLastLogin', [$dateLastLogin]);

        return parent::setDateLastLogin($dateLastLogin);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateLastLogin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateLastLogin', []);

        return parent::getDateLastLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function addRole(\Application\Entity\Role $role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRole', [$role]);

        return parent::addRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRole(\Application\Entity\Role $role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRole', [$role]);

        return parent::removeRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function hasRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasRole', [$role]);

        return parent::hasRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function _getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '_getRoles', []);

        return parent::_getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoles($roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoles', [$roles]);

        return parent::setRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRoles($roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRoles', [$roles]);

        return parent::removeRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function addRoles($roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRoles', [$roles]);

        return parent::addRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguageId($languageId = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguageId', [$languageId]);

        return parent::setLanguageId($languageId);
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguage(\Application\Entity\Language $languageId = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguage', [$languageId]);

        return parent::setLanguage($languageId);
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguageId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguageId', []);

        return parent::getLanguageId();
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguage', []);

        return parent::getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    public function getSuperiorId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSuperiorId', []);

        return parent::getSuperiorId();
    }

    /**
     * {@inheritDoc}
     */
    public function setSuperiorId($superiorId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSuperiorId', [$superiorId]);

        return parent::setSuperiorId($superiorId);
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganizationId($organizationId = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganizationId', [$organizationId]);

        return parent::setOrganizationId($organizationId);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganizationId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganizationId', []);

        return parent::getOrganizationId();
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstOrganization()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstOrganization', []);

        return parent::getFirstOrganization();
    }

    /**
     * {@inheritDoc}
     */
    public function getState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getState', []);

        return parent::getState();
    }

    /**
     * {@inheritDoc}
     */
    public function getSecurityKey()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSecurityKey', []);

        return parent::getSecurityKey();
    }

    /**
     * {@inheritDoc}
     */
    public function setSecurityKey($securityKey)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSecurityKey', [$securityKey]);

        return parent::setSecurityKey($securityKey);
    }

    /**
     * {@inheritDoc}
     */
    public function setState($state)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setState', [$state]);

        return parent::setState($state);
    }

    /**
     * {@inheritDoc}
     */
    public function setLastActivity($time)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastActivity', [$time]);

        return parent::setLastActivity($time);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastActivity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastActivity', []);

        return parent::getLastActivity();
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress', []);

        return parent::getAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddress($address)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress', [$address]);

        return parent::setAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function getZip()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getZip', []);

        return parent::getZip();
    }

    /**
     * {@inheritDoc}
     */
    public function setZip($zip)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setZip', [$zip]);

        return parent::setZip($zip);
    }

    /**
     * {@inheritDoc}
     */
    public function getCity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCity', []);

        return parent::getCity();
    }

    /**
     * {@inheritDoc}
     */
    public function setCity($city)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCity', [$city]);

        return parent::setCity($city);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhone1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhone1', []);

        return parent::getPhone1();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhone1($phone1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhone1', [$phone1]);

        return parent::setPhone1($phone1);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhone2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhone2', []);

        return parent::getPhone2();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhone2($phone2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhone2', [$phone2]);

        return parent::setPhone2($phone2);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompetenceAreas()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompetenceAreas', []);

        return parent::getCompetenceAreas();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompetenceAreas($competenceAreas)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompetenceAreas', [$competenceAreas]);

        return parent::setCompetenceAreas($competenceAreas);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCompetenceAreas($competenceAreas)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCompetenceAreas', [$competenceAreas]);

        return parent::removeCompetenceAreas($competenceAreas);
    }

    /**
     * {@inheritDoc}
     */
    public function addCompetenceAreas($competenceAreas)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCompetenceAreas', [$competenceAreas]);

        return parent::addCompetenceAreas($competenceAreas);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccessibleApplications()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccessibleApplications', []);

        return parent::getAccessibleApplications();
    }

    /**
     * {@inheritDoc}
     */
    public function setAccessibleApplications(\Doctrine\Common\Collections\Collection $accessibleApplications)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccessibleApplications', [$accessibleApplications]);

        return parent::setAccessibleApplications($accessibleApplications);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAccessibleApplications($accessibleApplications)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAccessibleApplications', [$accessibleApplications]);

        return parent::removeAccessibleApplications($accessibleApplications);
    }

    /**
     * {@inheritDoc}
     */
    public function addAccessibleApplications($accessibleApplications)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAccessibleApplications', [$accessibleApplications]);

        return parent::addAccessibleApplications($accessibleApplications);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmployeeNo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmployeeNo', []);

        return parent::getEmployeeNo();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmployeeNo($employeeNo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmployeeNo', [$employeeNo]);

        return parent::setEmployeeNo($employeeNo);
    }

    /**
     * {@inheritDoc}
     */
    public function setDatePasswordUpdated($datePasswordUpdated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatePasswordUpdated', [$datePasswordUpdated]);

        return parent::setDatePasswordUpdated($datePasswordUpdated);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatePasswordUpdated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatePasswordUpdated', []);

        return parent::getDatePasswordUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganizationRestrictionEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganizationRestrictionEnabled', []);

        return parent::getOrganizationRestrictionEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganizationRestrictionEnabled($organizationRestrictionEnabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganizationRestrictionEnabled', [$organizationRestrictionEnabled]);

        return parent::setOrganizationRestrictionEnabled($organizationRestrictionEnabled);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function __call($name, $arguments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__call', [$name, $arguments]);

        return parent::__call($name, $arguments);
    }

}
