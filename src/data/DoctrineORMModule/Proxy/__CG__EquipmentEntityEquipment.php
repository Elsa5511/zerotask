<?php

namespace DoctrineORMModule\Proxy\__CG__\Equipment\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Equipment extends \Equipment\Entity\Equipment implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'featureOverrides', 'nsn', 'sap', 'vendorPart', 'wll', 'length', 'materialQuality', 'standard', 'typeApproval', 'controlOrgan', 'equipmentId', 'title', 'code', 'description', 'order', 'hasToBeUsedWith', 'canBeUsedWith', 'status', 'dateAdd', 'dateUpdate', 'featureImage', 'user', 'equipmentTaxonomy', 'controlIntervalByDays', 'instanceType', 'instances', 'ladocDocumentation', 'application'];
        }

        return ['__isInitialized__', 'featureOverrides', 'nsn', 'sap', 'vendorPart', 'wll', 'length', 'materialQuality', 'standard', 'typeApproval', 'controlOrgan', 'equipmentId', 'title', 'code', 'description', 'order', 'hasToBeUsedWith', 'canBeUsedWith', 'status', 'dateAdd', 'dateUpdate', 'featureImage', 'user', 'equipmentTaxonomy', 'controlIntervalByDays', 'instanceType', 'instances', 'ladocDocumentation', 'application'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Equipment $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getFeatureOverrides()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFeatureOverrides', []);

        return parent::getFeatureOverrides();
    }

    /**
     * {@inheritDoc}
     */
    public function setFeatureOverrides($featureOverrides)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFeatureOverrides', [$featureOverrides]);

        return parent::setFeatureOverrides($featureOverrides);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFeatureOverrides($featureOverrides)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFeatureOverrides', [$featureOverrides]);

        return parent::removeFeatureOverrides($featureOverrides);
    }

    /**
     * {@inheritDoc}
     */
    public function addFeatureOverrides($featureOverrides)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFeatureOverrides', [$featureOverrides]);

        return parent::addFeatureOverrides($featureOverrides);
    }

    /**
     * {@inheritDoc}
     */
    public function getNsn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNsn', []);

        return parent::getNsn();
    }

    /**
     * {@inheritDoc}
     */
    public function getFormattedNsn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormattedNsn', []);

        return parent::getFormattedNsn();
    }

    /**
     * {@inheritDoc}
     */
    public function setNsn($nsn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNsn', [$nsn]);

        return parent::setNsn($nsn);
    }

    /**
     * {@inheritDoc}
     */
    public function getSap()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSap', []);

        return parent::getSap();
    }

    /**
     * {@inheritDoc}
     */
    public function setSap($sap)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSap', [$sap]);

        return parent::setSap($sap);
    }

    /**
     * {@inheritDoc}
     */
    public function getVendorPart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVendorPart', []);

        return parent::getVendorPart();
    }

    /**
     * {@inheritDoc}
     */
    public function setVendorPart($vendorPart)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVendorPart', [$vendorPart]);

        return parent::setVendorPart($vendorPart);
    }

    /**
     * {@inheritDoc}
     */
    public function getWll()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWll', []);

        return parent::getWll();
    }

    /**
     * {@inheritDoc}
     */
    public function setWll($wll)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWll', [$wll]);

        return parent::setWll($wll);
    }

    /**
     * {@inheritDoc}
     */
    public function getLength()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLength', []);

        return parent::getLength();
    }

    /**
     * {@inheritDoc}
     */
    public function setLength($length)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLength', [$length]);

        return parent::setLength($length);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaterialQuality()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaterialQuality', []);

        return parent::getMaterialQuality();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaterialQuality($materialQuality)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaterialQuality', [$materialQuality]);

        return parent::setMaterialQuality($materialQuality);
    }

    /**
     * {@inheritDoc}
     */
    public function getStandard()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStandard', []);

        return parent::getStandard();
    }

    /**
     * {@inheritDoc}
     */
    public function setStandard($standard)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStandard', [$standard]);

        return parent::setStandard($standard);
    }

    /**
     * {@inheritDoc}
     */
    public function getTypeApproval()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypeApproval', []);

        return parent::getTypeApproval();
    }

    /**
     * {@inheritDoc}
     */
    public function setTypeApproval($typeApproval)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTypeApproval', [$typeApproval]);

        return parent::setTypeApproval($typeApproval);
    }

    /**
     * {@inheritDoc}
     */
    public function getControlOrgan()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getControlOrgan', []);

        return parent::getControlOrgan();
    }

    /**
     * {@inheritDoc}
     */
    public function setControlOrgan($controlOrgan)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setControlOrgan', [$controlOrgan]);

        return parent::setControlOrgan($controlOrgan);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getEquipmentId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getEquipmentId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEquipmentId', []);

        return parent::getEquipmentId();
    }

    /**
     * {@inheritDoc}
     */
    public function setEquipmentId($equipmentId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEquipmentId', [$equipmentId]);

        return parent::setEquipmentId($equipmentId);
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setCode($code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCode', [$code]);

        return parent::setCode($code);
    }

    /**
     * {@inheritDoc}
     */
    public function getCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCode', []);

        return parent::getCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrder($order)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrder', [$order]);

        return parent::setOrder($order);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrder', []);

        return parent::getOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function setHasToBeUsedWith($hasToBeUsedWith)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHasToBeUsedWith', [$hasToBeUsedWith]);

        return parent::setHasToBeUsedWith($hasToBeUsedWith);
    }

    /**
     * {@inheritDoc}
     */
    public function getHasToBeUsedWith()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHasToBeUsedWith', []);

        return parent::getHasToBeUsedWith();
    }

    /**
     * {@inheritDoc}
     */
    public function setCanBeUsedWith($canBeUsedWith)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCanBeUsedWith', [$canBeUsedWith]);

        return parent::setCanBeUsedWith($canBeUsedWith);
    }

    /**
     * {@inheritDoc}
     */
    public function getCanBeUsedWith()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCanBeUsedWith', []);

        return parent::getCanBeUsedWith();
    }

    /**
     * {@inheritDoc}
     */
    public function addHasToBeUsedWith(\Doctrine\Common\Collections\ArrayCollection $hasToBeUsedWith = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addHasToBeUsedWith', [$hasToBeUsedWith]);

        return parent::addHasToBeUsedWith($hasToBeUsedWith);
    }

    /**
     * {@inheritDoc}
     */
    public function removeHasToBeUsedWith(\Doctrine\Common\Collections\ArrayCollection $hasToBeUsedWith = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeHasToBeUsedWith', [$hasToBeUsedWith]);

        return parent::removeHasToBeUsedWith($hasToBeUsedWith);
    }

    /**
     * {@inheritDoc}
     */
    public function addCanBeUsedWith(\Doctrine\Common\Collections\ArrayCollection $canBeUsedWith)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCanBeUsedWith', [$canBeUsedWith]);

        return parent::addCanBeUsedWith($canBeUsedWith);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCanBeUsedWith(\Doctrine\Common\Collections\ArrayCollection $canBeUsedWith)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCanBeUsedWith', [$canBeUsedWith]);

        return parent::removeCanBeUsedWith($canBeUsedWith);
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function getActiveStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActiveStatus', []);

        return parent::getActiveStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setActiveStatus($activeStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActiveStatus', [$activeStatus]);

        return parent::setActiveStatus($activeStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function setDateAdd($dateAdd)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateAdd', [$dateAdd]);

        return parent::setDateAdd($dateAdd);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateAdd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateAdd', []);

        return parent::getDateAdd();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateUpdate($dateUpdate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateUpdate', [$dateUpdate]);

        return parent::setDateUpdate($dateUpdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateUpdate', []);

        return parent::getDateUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setFeatureImage($featureImage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFeatureImage', [$featureImage]);

        return parent::setFeatureImage($featureImage);
    }

    /**
     * {@inheritDoc}
     */
    public function getFeatureImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFeatureImage', []);

        return parent::getFeatureImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\Application\Entity\User $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function addEquipmentTaxonomy(\Doctrine\Common\Collections\ArrayCollection $equipmentTaxonomies)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEquipmentTaxonomy', [$equipmentTaxonomies]);

        return parent::addEquipmentTaxonomy($equipmentTaxonomies);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEquipmentTaxonomy(\Doctrine\Common\Collections\ArrayCollection $equipmentTaxonomies)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEquipmentTaxonomy', [$equipmentTaxonomies]);

        return parent::removeEquipmentTaxonomy($equipmentTaxonomies);
    }

    /**
     * {@inheritDoc}
     */
    public function getEquipmentTaxonomy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEquipmentTaxonomy', []);

        return parent::getEquipmentTaxonomy();
    }

    /**
     * {@inheritDoc}
     */
    public function setEquipmentTaxonomy(\Doctrine\Common\Collections\Collection $equipmentTaxonomy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEquipmentTaxonomy', [$equipmentTaxonomy]);

        return parent::setEquipmentTaxonomy($equipmentTaxonomy);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstEquipmentTaxonomy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstEquipmentTaxonomy', []);

        return parent::getFirstEquipmentTaxonomy();
    }

    /**
     * {@inheritDoc}
     */
    public function getFormattedCompetenceAreas()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormattedCompetenceAreas', []);

        return parent::getFormattedCompetenceAreas();
    }

    /**
     * {@inheritDoc}
     */
    public function setControlIntervalByDays($controlIntervalByDays)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setControlIntervalByDays', [$controlIntervalByDays]);

        return parent::setControlIntervalByDays($controlIntervalByDays);
    }

    /**
     * {@inheritDoc}
     */
    public function getControlIntervalByDays()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getControlIntervalByDays', []);

        return parent::getControlIntervalByDays();
    }

    /**
     * {@inheritDoc}
     */
    public function getInstanceType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInstanceType', []);

        return parent::getInstanceType();
    }

    /**
     * {@inheritDoc}
     */
    public function setInstanceType($instanceType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInstanceType', [$instanceType]);

        return parent::setInstanceType($instanceType);
    }

    /**
     * {@inheritDoc}
     */
    public function getInstances()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInstances', []);

        return parent::getInstances();
    }

    /**
     * {@inheritDoc}
     */
    public function setInstances($instances)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInstances', [$instances]);

        return parent::setInstances($instances);
    }

    /**
     * {@inheritDoc}
     */
    public function getLadocDocumentation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLadocDocumentation', []);

        return parent::getLadocDocumentation();
    }

    /**
     * {@inheritDoc}
     */
    public function setLadocDocumentation($ladocDocumentation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLadocDocumentation', [$ladocDocumentation]);

        return parent::setLadocDocumentation($ladocDocumentation);
    }

    /**
     * {@inheritDoc}
     */
    public function getApplication()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApplication', []);

        return parent::getApplication();
    }

    /**
     * {@inheritDoc}
     */
    public function setApplication($application)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApplication', [$application]);

        return parent::setApplication($application);
    }

    /**
     * {@inheritDoc}
     */
    public function __call($name, $arguments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__call', [$name, $arguments]);

        return parent::__call($name, $arguments);
    }

}
